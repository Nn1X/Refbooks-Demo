// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Refbooks.Persistence;

#nullable disable

namespace Refbooks.Persistence.Migrations
{
    [DbContext(typeof(RefbooksDbContext))]
    [Migration("20230808162838_add_f001-f003_refbooks_to_dbcontext")]
    partial class add_f001f003_refbooks_to_dbcontext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Refbooks.Domain.FRefbooks.F001", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("BankNameMtrRecipient")
                        .HasColumnType("text")
                        .HasColumnName("bank_name_mtr_recipient");

                    b.Property<string>("BankNameMtrSender")
                        .HasColumnType("text")
                        .HasColumnName("bank_name_mtr_sender");

                    b.Property<string>("Bic")
                        .HasColumnType("text")
                        .HasColumnName("bic");

                    b.Property<string>("BranchesNumber")
                        .HasColumnType("text")
                        .HasColumnName("branches_number");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnType("date")
                        .HasColumnName("date_edit");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("DirectorFirstName")
                        .HasColumnType("text")
                        .HasColumnName("director_first_name");

                    b.Property<string>("DirectorLastName")
                        .HasColumnType("text")
                        .HasColumnName("director_last_name");

                    b.Property<string>("DirectorPatronymic")
                        .HasColumnType("text")
                        .HasColumnName("director_patronymic");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .HasColumnType("text")
                        .HasColumnName("fax");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("HotlinePhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("hotline_phone_number");

                    b.Property<string>("Inn")
                        .HasColumnType("text")
                        .HasColumnName("inn");

                    b.Property<string>("Kbk")
                        .HasColumnType("text")
                        .HasColumnName("kbk");

                    b.Property<string>("Kpp")
                        .HasColumnType("text")
                        .HasColumnName("kpp");

                    b.Property<string>("NameMtrRecipient")
                        .HasColumnType("text")
                        .HasColumnName("name_mtr_recipient");

                    b.Property<string>("NameMtrSender")
                        .HasColumnType("text")
                        .HasColumnName("name_mtr_sender");

                    b.Property<string>("OfficialWebsite")
                        .HasColumnType("text")
                        .HasColumnName("official_website");

                    b.Property<string>("Ogrn")
                        .HasColumnType("text")
                        .HasColumnName("ogrn");

                    b.Property<string>("Okato")
                        .HasColumnType("text")
                        .HasColumnName("okato");

                    b.Property<string>("Oktmo")
                        .HasColumnType("text")
                        .HasColumnName("oktmo");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<string>("RsMtrRecipient")
                        .HasColumnType("text")
                        .HasColumnName("rs_mtr_recipient");

                    b.Property<string>("RsMtrSender")
                        .HasColumnType("text")
                        .HasColumnName("rs_mtr_sender");

                    b.Property<string>("ShortName")
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("f001", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.FRefbooks.F002", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnType("date")
                        .HasColumnName("date_edit");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("DirectorFirstName")
                        .HasColumnType("text")
                        .HasColumnName("director_first_name");

                    b.Property<string>("DirectorLastName")
                        .HasColumnType("text")
                        .HasColumnName("director_last_name");

                    b.Property<string>("DirectorPatronymic")
                        .HasColumnType("text")
                        .HasColumnName("director_patronymic");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<DateTime?>("EndDateLicense")
                        .HasColumnType("date")
                        .HasColumnName("end_date_license");

                    b.Property<string>("Fax")
                        .HasColumnType("text")
                        .HasColumnName("fax");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("HotlinePhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("hotline_phone_number");

                    b.Property<DateTime?>("IssueDateLicense")
                        .HasColumnType("date")
                        .HasColumnName("issue_date_license");

                    b.Property<string>("Kpp")
                        .HasColumnType("text")
                        .HasColumnName("kpp");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("text")
                        .HasColumnName("license_number");

                    b.Property<string>("Ogrn")
                        .HasColumnType("text")
                        .HasColumnName("ogrn");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("ShortName")
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("f002", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.FRefbooks.F003", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnType("date")
                        .HasColumnName("date_edit");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("DepartmentalAffiliationCode")
                        .HasColumnType("text")
                        .HasColumnName("departmental_affiliation_code");

                    b.Property<string>("DirectorFirstName")
                        .HasColumnType("text")
                        .HasColumnName("director_first_name");

                    b.Property<string>("DirectorLastName")
                        .HasColumnType("text")
                        .HasColumnName("director_last_name");

                    b.Property<string>("DirectorPatronymic")
                        .HasColumnType("text")
                        .HasColumnName("director_patronymic");

                    b.Property<string>("FirstEmail")
                        .HasColumnType("text")
                        .HasColumnName("first_email");

                    b.Property<string>("FirstFax")
                        .HasColumnType("text")
                        .HasColumnName("first_fax");

                    b.Property<string>("FirstPhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("first_phone_number");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("Inn")
                        .HasColumnType("text")
                        .HasColumnName("inn");

                    b.Property<string>("Kpp")
                        .HasColumnType("text")
                        .HasColumnName("kpp");

                    b.Property<string>("OfficialWebsite")
                        .HasColumnType("text")
                        .HasColumnName("official_website");

                    b.Property<string>("Ogrn")
                        .HasColumnType("text")
                        .HasColumnName("ogrn");

                    b.Property<string>("Okato")
                        .HasColumnType("text")
                        .HasColumnName("okato");

                    b.Property<string>("OkopfCode")
                        .HasColumnType("text")
                        .HasColumnName("okopf_code");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<string>("SecondEmail")
                        .HasColumnType("text")
                        .HasColumnName("second_email");

                    b.Property<string>("SecondFax")
                        .HasColumnType("text")
                        .HasColumnName("second_fax");

                    b.Property<string>("SecondPhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("second_phone_number");

                    b.Property<string>("ShortName")
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<string>("SubordinationSign")
                        .HasColumnType("text")
                        .HasColumnName("subordination_sign");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("f003", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.FRefbooks.F005", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("f005", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.FRefbooks.F006", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("f006", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.FRefbooks.F007", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("f007", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.FRefbooks.F008", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("f008", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.FRefbooks.F009", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("f009", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.FRefbooks.F010", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int?>("FederalDistrictCode")
                        .HasColumnType("integer")
                        .HasColumnName("federal_district_code");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Okato")
                        .HasColumnType("text")
                        .HasColumnName("okato");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("f010", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.FRefbooks.F011", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("DocumentNumberMask")
                        .HasColumnType("text")
                        .HasColumnName("document_number_mask");

                    b.Property<string>("DocumentSerialMask")
                        .HasColumnType("text")
                        .HasColumnName("document_serial_mask");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("f011", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.FRefbooks.F014", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer");

                    b.Property<int?>("CodeReserveField")
                        .HasColumnType("integer");

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<decimal?>("PenaltyCoefficient")
                        .HasColumnType("numeric");

                    b.Property<string>("PgFormCode")
                        .HasColumnType("text");

                    b.Property<string>("RefusalReason")
                        .HasColumnType("text");

                    b.Property<decimal?>("SanctionCoefficient")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("F014");
                });

            modelBuilder.Entity("Refbooks.Domain.FRefbooks.F015", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("f015", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.FRefbooks.F032", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<DateTime?>("ExclussionDate")
                        .HasColumnType("date")
                        .HasColumnName("exclussion_date");

                    b.Property<int?>("ExclussionReasonCode")
                        .HasColumnType("integer")
                        .HasColumnName("exclussion_reason_code");

                    b.Property<DateTime?>("InclussionDate")
                        .HasColumnType("date")
                        .HasColumnName("inclussion_date");

                    b.Property<string>("Oktmo")
                        .HasColumnType("text")
                        .HasColumnName("oktmo");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("text")
                        .HasColumnName("registration_number");

                    b.Property<string>("SubjectName")
                        .HasColumnType("text")
                        .HasColumnName("subject_name");

                    b.Property<string>("Uid")
                        .HasColumnType("text")
                        .HasColumnName("uid");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("f032", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.FRefbooks.F042", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CasesEkmpNumber")
                        .HasColumnType("integer")
                        .HasColumnName("cases_ekmp_number");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int?>("ConductedEkmpNumber")
                        .HasColumnType("integer")
                        .HasColumnName("conducted_ekmp_number");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<DateTime?>("ExclussionDate")
                        .HasColumnType("date")
                        .HasColumnName("exclussion_date");

                    b.Property<int?>("ExclussionReasonCode")
                        .HasColumnType("integer")
                        .HasColumnName("exclussion_reason_code");

                    b.Property<DateTime?>("InclussionDate")
                        .HasColumnType("date")
                        .HasColumnName("inclussion_date");

                    b.Property<int?>("MoEkmpNumber")
                        .HasColumnType("integer")
                        .HasColumnName("mo_ekmp_number");

                    b.Property<string>("Oktmo")
                        .HasColumnType("text")
                        .HasColumnName("oktmo");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("text")
                        .HasColumnName("registration_number");

                    b.Property<string>("SubjectName")
                        .HasColumnType("text")
                        .HasColumnName("subject_name");

                    b.Property<string>("Uid")
                        .HasColumnType("text")
                        .HasColumnName("uid");

                    b.Property<int?>("UnreasonableEkmpNumber")
                        .HasColumnType("integer")
                        .HasColumnName("unreasonable_ekmp_number");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("f042", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.NRefbooks.N001", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("n001", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
