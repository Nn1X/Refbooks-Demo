// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Refbooks.Persistence;

#nullable disable

namespace Refbooks.Persistence.Migrations
{
    [DbContext(typeof(RefbooksDbContext))]
    partial class RefbooksDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Refbooks.Domain.Nsi.FRefbooks.F001", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("BankNameMtrRecipient")
                        .HasColumnType("text")
                        .HasColumnName("bank_name_mtr_recipient");

                    b.Property<string>("BankNameMtrSender")
                        .HasColumnType("text")
                        .HasColumnName("bank_name_mtr_sender");

                    b.Property<string>("Bic")
                        .HasColumnType("text")
                        .HasColumnName("bic");

                    b.Property<string>("BranchesNumber")
                        .HasColumnType("text")
                        .HasColumnName("branches_number");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnType("date")
                        .HasColumnName("date_edit");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("DirectorFirstName")
                        .HasColumnType("text")
                        .HasColumnName("director_first_name");

                    b.Property<string>("DirectorLastName")
                        .HasColumnType("text")
                        .HasColumnName("director_last_name");

                    b.Property<string>("DirectorPatronymic")
                        .HasColumnType("text")
                        .HasColumnName("director_patronymic");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Fax")
                        .HasColumnType("text")
                        .HasColumnName("fax");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("HotlinePhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("hotline_phone_number");

                    b.Property<string>("Inn")
                        .HasColumnType("text")
                        .HasColumnName("inn");

                    b.Property<string>("Kbk")
                        .HasColumnType("text")
                        .HasColumnName("kbk");

                    b.Property<string>("Kpp")
                        .HasColumnType("text")
                        .HasColumnName("kpp");

                    b.Property<string>("NameMtrRecipient")
                        .HasColumnType("text")
                        .HasColumnName("name_mtr_recipient");

                    b.Property<string>("NameMtrSender")
                        .HasColumnType("text")
                        .HasColumnName("name_mtr_sender");

                    b.Property<string>("OfficialWebsite")
                        .HasColumnType("text")
                        .HasColumnName("official_website");

                    b.Property<string>("Ogrn")
                        .HasColumnType("text")
                        .HasColumnName("ogrn");

                    b.Property<string>("Okato")
                        .HasColumnType("text")
                        .HasColumnName("okato");

                    b.Property<string>("Oktmo")
                        .HasColumnType("text")
                        .HasColumnName("oktmo");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<string>("RsMtrRecipient")
                        .HasColumnType("text")
                        .HasColumnName("rs_mtr_recipient");

                    b.Property<string>("RsMtrSender")
                        .HasColumnType("text")
                        .HasColumnName("rs_mtr_sender");

                    b.Property<string>("ShortName")
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.HasKey("Id")
                        .HasName("pk_f001");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_f001_id");

                    b.ToTable("f001", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.FRefbooks.F002", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnType("date")
                        .HasColumnName("date_edit");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("DirectorFirstName")
                        .HasColumnType("text")
                        .HasColumnName("director_first_name");

                    b.Property<string>("DirectorLastName")
                        .HasColumnType("text")
                        .HasColumnName("director_last_name");

                    b.Property<string>("DirectorPatronymic")
                        .HasColumnType("text")
                        .HasColumnName("director_patronymic");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<DateTime?>("EndDateLicense")
                        .HasColumnType("date")
                        .HasColumnName("end_date_license");

                    b.Property<string>("Fax")
                        .HasColumnType("text")
                        .HasColumnName("fax");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("HotlinePhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("hotline_phone_number");

                    b.Property<DateTime?>("IssueDateLicense")
                        .HasColumnType("date")
                        .HasColumnName("issue_date_license");

                    b.Property<string>("Kpp")
                        .HasColumnType("text")
                        .HasColumnName("kpp");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("text")
                        .HasColumnName("license_number");

                    b.Property<string>("Ogrn")
                        .HasColumnType("text")
                        .HasColumnName("ogrn");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<string>("ShortName")
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.HasKey("Id")
                        .HasName("pk_f002");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_f002_id");

                    b.ToTable("f002", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.FRefbooks.F003", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnType("date")
                        .HasColumnName("date_edit");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("DepartmentalAffiliationCode")
                        .HasColumnType("text")
                        .HasColumnName("departmental_affiliation_code");

                    b.Property<string>("DirectorFirstName")
                        .HasColumnType("text")
                        .HasColumnName("director_first_name");

                    b.Property<string>("DirectorLastName")
                        .HasColumnType("text")
                        .HasColumnName("director_last_name");

                    b.Property<string>("DirectorPatronymic")
                        .HasColumnType("text")
                        .HasColumnName("director_patronymic");

                    b.Property<string>("FirstEmail")
                        .HasColumnType("text")
                        .HasColumnName("first_email");

                    b.Property<string>("FirstFax")
                        .HasColumnType("text")
                        .HasColumnName("first_fax");

                    b.Property<string>("FirstPhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("first_phone_number");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("Inn")
                        .HasColumnType("text")
                        .HasColumnName("inn");

                    b.Property<string>("Kpp")
                        .HasColumnType("text")
                        .HasColumnName("kpp");

                    b.Property<string>("OfficialWebsite")
                        .HasColumnType("text")
                        .HasColumnName("official_website");

                    b.Property<string>("Ogrn")
                        .HasColumnType("text")
                        .HasColumnName("ogrn");

                    b.Property<string>("Okato")
                        .HasColumnType("text")
                        .HasColumnName("okato");

                    b.Property<string>("OkopfCode")
                        .HasColumnType("text")
                        .HasColumnName("okopf_code");

                    b.Property<string>("PostalCode")
                        .HasColumnType("text")
                        .HasColumnName("postal_code");

                    b.Property<string>("SecondEmail")
                        .HasColumnType("text")
                        .HasColumnName("second_email");

                    b.Property<string>("SecondFax")
                        .HasColumnType("text")
                        .HasColumnName("second_fax");

                    b.Property<string>("SecondPhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("second_phone_number");

                    b.Property<string>("ShortName")
                        .HasColumnType("text")
                        .HasColumnName("short_name");

                    b.Property<string>("SubordinationSign")
                        .HasColumnType("text")
                        .HasColumnName("subordination_sign");

                    b.HasKey("Id")
                        .HasName("pk_f003");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_f003_id");

                    b.ToTable("f003", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.FRefbooks.F005", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_f005");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_f005_id");

                    b.ToTable("f005", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.FRefbooks.F006", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_f006");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_f006_id");

                    b.ToTable("f006", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.FRefbooks.F007", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_f007");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_f007_id");

                    b.ToTable("f007", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.FRefbooks.F008", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_f008");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_f008_id");

                    b.ToTable("f008", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.FRefbooks.F009", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_f009");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_f009_id");

                    b.ToTable("f009", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.FRefbooks.F010", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int?>("FederalDistrictCode")
                        .HasColumnType("integer")
                        .HasColumnName("federal_district_code");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Okato")
                        .HasColumnType("text")
                        .HasColumnName("okato");

                    b.HasKey("Id")
                        .HasName("pk_f010");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_f010_id");

                    b.ToTable("f010", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.FRefbooks.F011", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("DocumentNumberMask")
                        .HasColumnType("text")
                        .HasColumnName("document_number_mask");

                    b.Property<string>("DocumentSerialMask")
                        .HasColumnType("text")
                        .HasColumnName("document_serial_mask");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_f011");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_f011_id");

                    b.ToTable("f011", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.FRefbooks.F014", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<int?>("CodeReserveField")
                        .HasColumnType("integer")
                        .HasColumnName("code_reserve_field");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal?>("PenaltyCoefficient")
                        .HasColumnType("numeric")
                        .HasColumnName("penalty_coefficient");

                    b.Property<string>("PgFormCode")
                        .HasColumnType("text")
                        .HasColumnName("pg_form_code");

                    b.Property<string>("RefusalReason")
                        .HasColumnType("text")
                        .HasColumnName("refusal_reason");

                    b.Property<decimal?>("SanctionCoefficient")
                        .HasColumnType("numeric")
                        .HasColumnName("sanction_coefficient");

                    b.HasKey("Id")
                        .HasName("pk_f014");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_f014_id");

                    b.ToTable("f014", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.FRefbooks.F015", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_f015");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_f015_id");

                    b.ToTable("f015", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.FRefbooks.F032", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<DateTime?>("ExclussionDate")
                        .HasColumnType("date")
                        .HasColumnName("exclussion_date");

                    b.Property<int?>("ExclussionReasonCode")
                        .HasColumnType("integer")
                        .HasColumnName("exclussion_reason_code");

                    b.Property<DateTime?>("InclussionDate")
                        .HasColumnType("date")
                        .HasColumnName("inclussion_date");

                    b.Property<string>("Oktmo")
                        .HasColumnType("text")
                        .HasColumnName("oktmo");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("text")
                        .HasColumnName("registration_number");

                    b.Property<string>("SubjectName")
                        .HasColumnType("text")
                        .HasColumnName("subject_name");

                    b.Property<string>("Uid")
                        .HasColumnType("text")
                        .HasColumnName("uid");

                    b.HasKey("Id")
                        .HasName("pk_f032");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_f032_id");

                    b.ToTable("f032", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.FRefbooks.F042", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CasesEkmpNumber")
                        .HasColumnType("integer")
                        .HasColumnName("cases_ekmp_number");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<int?>("ConductedEkmpNumber")
                        .HasColumnType("integer")
                        .HasColumnName("conducted_ekmp_number");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<DateTime?>("ExclussionDate")
                        .HasColumnType("date")
                        .HasColumnName("exclussion_date");

                    b.Property<int?>("ExclussionReasonCode")
                        .HasColumnType("integer")
                        .HasColumnName("exclussion_reason_code");

                    b.Property<DateTime?>("InclussionDate")
                        .HasColumnType("date")
                        .HasColumnName("inclussion_date");

                    b.Property<int?>("MoEkmpNumber")
                        .HasColumnType("integer")
                        .HasColumnName("mo_ekmp_number");

                    b.Property<string>("Oktmo")
                        .HasColumnType("text")
                        .HasColumnName("oktmo");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("text")
                        .HasColumnName("registration_number");

                    b.Property<string>("SubjectName")
                        .HasColumnType("text")
                        .HasColumnName("subject_name");

                    b.Property<string>("Uid")
                        .HasColumnType("text")
                        .HasColumnName("uid");

                    b.Property<int?>("UnreasonableEkmpNumber")
                        .HasColumnType("integer")
                        .HasColumnName("unreasonable_ekmp_number");

                    b.HasKey("Id")
                        .HasName("pk_f042");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_f042_id");

                    b.ToTable("f042", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.KRefbooks.K002", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeO002")
                        .HasColumnType("text")
                        .HasColumnName("code_o002");

                    b.Property<int?>("CodeV006")
                        .HasColumnType("integer")
                        .HasColumnName("code_v006");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("MedicalCare")
                        .HasColumnType("text")
                        .HasColumnName("medical_care");

                    b.Property<decimal?>("MedicalCareCoefficient")
                        .HasColumnType("numeric")
                        .HasColumnName("medical_care_coefficient");

                    b.HasKey("Id")
                        .HasName("pk_k002");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_k002_id");

                    b.ToTable("k002", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.KRefbooks.K003", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("BaseRate")
                        .HasColumnType("numeric")
                        .HasColumnName("base_rate");

                    b.Property<string>("CodeO002")
                        .HasColumnType("text")
                        .HasColumnName("code_o002");

                    b.Property<int?>("CodeV006")
                        .HasColumnType("integer")
                        .HasColumnName("code_v006");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.HasKey("Id")
                        .HasName("pk_k003");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_k003_id");

                    b.ToTable("k003", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.KRefbooks.K004", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeO002")
                        .HasColumnType("text")
                        .HasColumnName("code_o002");

                    b.Property<string>("CoefficientApplyingCondition")
                        .HasColumnType("text")
                        .HasColumnName("coefficient_applying_condition");

                    b.Property<int?>("CoeffiecientNumber")
                        .HasColumnType("integer")
                        .HasColumnName("coeffiecient_number");

                    b.Property<int?>("CoeffiecientNumberReason")
                        .HasColumnType("integer")
                        .HasColumnName("coeffiecient_number_reason");

                    b.Property<decimal?>("CoeffiecientValue")
                        .HasColumnType("numeric")
                        .HasColumnName("coeffiecient_value");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.HasKey("Id")
                        .HasName("pk_k004");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_k004_id");

                    b.ToTable("k004", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N001", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_n001");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n001_id");

                    b.ToTable("n001", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N002", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("MedicamentId")
                        .HasColumnType("text")
                        .HasColumnName("medicament_id");

                    b.Property<string>("SchemeCode")
                        .HasColumnType("text")
                        .HasColumnName("scheme_code");

                    b.HasKey("Id")
                        .HasName("pk_n002");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n002_id");

                    b.ToTable("n002", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N003", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("MkbDiagnosis")
                        .HasColumnType("text")
                        .HasColumnName("mkb_diagnosis");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("TCode")
                        .HasColumnType("text")
                        .HasColumnName("t_code");

                    b.HasKey("Id")
                        .HasName("pk_n003");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n003_id");

                    b.ToTable("n003", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N004", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("MkbDiagnosis")
                        .HasColumnType("text")
                        .HasColumnName("mkb_diagnosis");

                    b.Property<string>("NCode")
                        .HasColumnType("text")
                        .HasColumnName("n_code");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_n004");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n004_id");

                    b.ToTable("n004", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N005", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("MCode")
                        .HasColumnType("text")
                        .HasColumnName("m_code");

                    b.Property<string>("MkbDiagnosis")
                        .HasColumnType("text")
                        .HasColumnName("mkb_diagnosis");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_n005");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n005_id");

                    b.ToTable("n005", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N006", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int?>("MCode")
                        .HasColumnType("integer")
                        .HasColumnName("m_code");

                    b.Property<string>("MkbDiagnosis")
                        .HasColumnType("text")
                        .HasColumnName("mkb_diagnosis");

                    b.Property<int?>("NCode")
                        .HasColumnType("integer")
                        .HasColumnName("n_code");

                    b.Property<int?>("StageCode")
                        .HasColumnType("integer")
                        .HasColumnName("stage_code");

                    b.Property<int?>("TCode")
                        .HasColumnType("integer")
                        .HasColumnName("t_code");

                    b.HasKey("Id")
                        .HasName("pk_n006");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n006_id");

                    b.ToTable("n006", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N007", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_n007");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n007_id");

                    b.ToTable("n007", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N008", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int?>("N007Code")
                        .HasColumnType("integer")
                        .HasColumnName("n007code");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_n008");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n008_id");

                    b.ToTable("n008", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N009", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("MkbDiagnosis")
                        .HasColumnType("text")
                        .HasColumnName("mkb_diagnosis");

                    b.Property<int?>("N007Code")
                        .HasColumnType("integer")
                        .HasColumnName("n007code");

                    b.HasKey("Id")
                        .HasName("pk_n009");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n009_id");

                    b.ToTable("n009", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N010", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Marker")
                        .HasColumnType("text")
                        .HasColumnName("marker");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_n010");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n010_id");

                    b.ToTable("n010", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N011", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("N010Code")
                        .HasColumnType("text")
                        .HasColumnName("n010code");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Result")
                        .HasColumnType("text")
                        .HasColumnName("result");

                    b.HasKey("Id")
                        .HasName("pk_n011");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n011_id");

                    b.ToTable("n011", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N012", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("MkbDiagnosis")
                        .HasColumnType("text")
                        .HasColumnName("mkb_diagnosis");

                    b.Property<int?>("N010Code")
                        .HasColumnType("integer")
                        .HasColumnName("n010code");

                    b.HasKey("Id")
                        .HasName("pk_n012");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n012_id");

                    b.ToTable("n012", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N013", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_n013");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n013_id");

                    b.ToTable("n013", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N014", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_n014");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n014_id");

                    b.ToTable("n014", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N015", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_n015");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n015_id");

                    b.ToTable("n015", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N016", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_n016");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n016_id");

                    b.ToTable("n016", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N017", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_n017");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n017_id");

                    b.ToTable("n017", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N018", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_n018");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n018_id");

                    b.ToTable("n018", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N019", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_n019");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n019_id");

                    b.ToTable("n019", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N020", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_n020");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n020_id");

                    b.ToTable("n020", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.NRefbooks.N021", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("MedicamentId")
                        .HasColumnType("text")
                        .HasColumnName("medicament_id");

                    b.Property<string>("SchemeCode")
                        .HasColumnType("text")
                        .HasColumnName("scheme_code");

                    b.HasKey("Id")
                        .HasName("pk_n021");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_n021_id");

                    b.ToTable("n021", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.ORefbooks.O001", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Alpha2Code")
                        .HasColumnType("text")
                        .HasColumnName("alpha2code");

                    b.Property<string>("Alpha3Code")
                        .HasColumnType("text")
                        .HasColumnName("alpha3code");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("ContinuationName")
                        .HasColumnType("text")
                        .HasColumnName("continuation_name");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnType("date")
                        .HasColumnName("date_edit");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("LastEditNumber")
                        .HasColumnType("text")
                        .HasColumnName("last_edit_number");

                    b.Property<string>("LastEditType")
                        .HasColumnType("text")
                        .HasColumnName("last_edit_type");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_o001");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_o001_id");

                    b.ToTable("o001", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.ORefbooks.O002", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalData")
                        .HasColumnType("text")
                        .HasColumnName("additional_data");

                    b.Property<string>("AreaCityCode")
                        .HasColumnType("text")
                        .HasColumnName("area_city_code");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnType("date")
                        .HasColumnName("date_edit");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("LastEditNumber")
                        .HasColumnType("text")
                        .HasColumnName("last_edit_number");

                    b.Property<string>("LastEditType")
                        .HasColumnType("text")
                        .HasColumnName("last_edit_type");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("SectionCode")
                        .HasColumnType("integer")
                        .HasColumnName("section_code");

                    b.Property<string>("TerritoryCode")
                        .HasColumnType("text")
                        .HasColumnName("territory_code");

                    b.Property<string>("VillageCode")
                        .HasColumnType("text")
                        .HasColumnName("village_code");

                    b.Property<string>("VillageCouncilCode")
                        .HasColumnType("text")
                        .HasColumnName("village_council_code");

                    b.HasKey("Id")
                        .HasName("pk_o002");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_o002_id");

                    b.ToTable("o002", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.ORefbooks.O003", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalData")
                        .HasColumnType("text")
                        .HasColumnName("additional_data");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnType("date")
                        .HasColumnName("date_edit");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("LastEditNumber")
                        .HasColumnType("text")
                        .HasColumnName("last_edit_number");

                    b.Property<string>("LastEditType")
                        .HasColumnType("text")
                        .HasColumnName("last_edit_type");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PositionCode")
                        .HasColumnType("text")
                        .HasColumnName("position_code");

                    b.Property<string>("SectionCode")
                        .HasColumnType("text")
                        .HasColumnName("section_code");

                    b.HasKey("Id")
                        .HasName("pk_o003");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_o003_id");

                    b.ToTable("o003", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.ORefbooks.O004", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<string>("CollectionAlgorithm")
                        .HasColumnType("text")
                        .HasColumnName("collection_algorithm");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnType("date")
                        .HasColumnName("date_edit");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("LastEditNumber")
                        .HasColumnType("text")
                        .HasColumnName("last_edit_number");

                    b.Property<string>("LastEditType")
                        .HasColumnType("text")
                        .HasColumnName("last_edit_type");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_o004");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_o004_id");

                    b.ToTable("o004", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.ORefbooks.O005", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnType("date")
                        .HasColumnName("date_edit");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("LastEditNumber")
                        .HasColumnType("text")
                        .HasColumnName("last_edit_number");

                    b.Property<string>("LastEditType")
                        .HasColumnType("text")
                        .HasColumnName("last_edit_type");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_o005");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_o005_id");

                    b.ToTable("o005", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.QRefbooks.Q015", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<string>("Condition")
                        .HasColumnType("text")
                        .HasColumnName("condition");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("ElementId")
                        .HasColumnType("text")
                        .HasColumnName("element_id");

                    b.Property<string>("Mask")
                        .HasColumnType("text")
                        .HasColumnName("mask");

                    b.Property<int?>("MaxLength")
                        .HasColumnType("integer")
                        .HasColumnName("max_length");

                    b.Property<int?>("MinLength")
                        .HasColumnType("integer")
                        .HasColumnName("min_length");

                    b.Property<string>("NsiCode")
                        .HasColumnType("text")
                        .HasColumnName("nsi_code");

                    b.Property<string>("NsiElement")
                        .HasColumnType("text")
                        .HasColumnName("nsi_element");

                    b.Property<string>("RegistryType")
                        .HasColumnType("text")
                        .HasColumnName("registry_type");

                    b.Property<string>("ValuesSet")
                        .HasColumnType("text")
                        .HasColumnName("values_set");

                    b.HasKey("Id")
                        .HasName("pk_q015");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_q015_id");

                    b.ToTable("q015", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.QRefbooks.Q016", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<string>("Condition")
                        .HasColumnType("text")
                        .HasColumnName("condition");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("ElementId")
                        .HasColumnType("text")
                        .HasColumnName("element_id");

                    b.Property<string>("NsiCode")
                        .HasColumnType("text")
                        .HasColumnName("nsi_code");

                    b.Property<string>("NsiElement")
                        .HasColumnType("text")
                        .HasColumnName("nsi_element");

                    b.Property<string>("RegistryType")
                        .HasColumnType("text")
                        .HasColumnName("registry_type");

                    b.Property<string>("ValuesSet")
                        .HasColumnType("text")
                        .HasColumnName("values_set");

                    b.HasKey("Id")
                        .HasName("pk_q016");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_q016_id");

                    b.ToTable("q016", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.QRefbooks.Q017", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_q017");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_q017_id");

                    b.ToTable("q017", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.QRefbooks.Q018", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("ElementFormat")
                        .HasColumnType("text")
                        .HasColumnName("element_format");

                    b.Property<string>("ElementId")
                        .HasColumnType("text")
                        .HasColumnName("element_id");

                    b.Property<string>("ElementName")
                        .HasColumnType("text")
                        .HasColumnName("element_name");

                    b.Property<string>("ElementType")
                        .HasColumnType("text")
                        .HasColumnName("element_type");

                    b.Property<string>("MaxLength")
                        .HasColumnType("text")
                        .HasColumnName("max_length");

                    b.Property<string>("RegistryType")
                        .HasColumnType("text")
                        .HasColumnName("registry_type");

                    b.HasKey("Id")
                        .HasName("pk_q018");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_q018_id");

                    b.ToTable("q018", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.QRefbooks.Q019", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_q019");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_q019_id");

                    b.ToTable("q019", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.QRefbooks.Q020", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_q020");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_q020_id");

                    b.ToTable("q020", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.QRefbooks.Q021", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_q021");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_q021_id");

                    b.ToTable("q021", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.QRefbooks.Q022", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<string>("Condition")
                        .HasColumnType("text")
                        .HasColumnName("condition");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("ElementId")
                        .HasColumnType("text")
                        .HasColumnName("element_id");

                    b.Property<string>("Mask")
                        .HasColumnType("text")
                        .HasColumnName("mask");

                    b.Property<int?>("MaxLength")
                        .HasColumnType("integer")
                        .HasColumnName("max_length");

                    b.Property<int?>("MinLength")
                        .HasColumnType("integer")
                        .HasColumnName("min_length");

                    b.Property<string>("NsiCode")
                        .HasColumnType("text")
                        .HasColumnName("nsi_code");

                    b.Property<string>("NsiElement")
                        .HasColumnType("text")
                        .HasColumnName("nsi_element");

                    b.Property<string>("RegistryType")
                        .HasColumnType("text")
                        .HasColumnName("registry_type");

                    b.Property<string>("TfomsElementId")
                        .HasColumnType("text")
                        .HasColumnName("tfoms_element_id");

                    b.Property<string>("ValuesSet")
                        .HasColumnType("text")
                        .HasColumnName("values_set");

                    b.HasKey("Id")
                        .HasName("pk_q022");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_q022_id");

                    b.ToTable("q022", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.QRefbooks.Q023", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<string>("Condition")
                        .HasColumnType("text")
                        .HasColumnName("condition");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("ElementId")
                        .HasColumnType("text")
                        .HasColumnName("element_id");

                    b.Property<string>("NsiCode")
                        .HasColumnType("text")
                        .HasColumnName("nsi_code");

                    b.Property<string>("NsiElement")
                        .HasColumnType("text")
                        .HasColumnName("nsi_element");

                    b.Property<string>("RegistryType")
                        .HasColumnType("text")
                        .HasColumnName("registry_type");

                    b.Property<string>("TfomsElementId")
                        .HasColumnType("text")
                        .HasColumnName("tfoms_element_id");

                    b.Property<string>("ValuesSet")
                        .HasColumnType("text")
                        .HasColumnName("values_set");

                    b.HasKey("Id")
                        .HasName("pk_q023");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_q023_id");

                    b.ToTable("q023", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.RRefbooks.R001", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_r001");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_r001_id");

                    b.ToTable("r001", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.RRefbooks.R002", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_r002");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_r002_id");

                    b.ToTable("r002", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.RRefbooks.R003", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_r003");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_r003_id");

                    b.ToTable("r003", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.RRefbooks.R004", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_r004");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_r004_id");

                    b.ToTable("r004", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.RRefbooks.R005", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_r005");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_r005_id");

                    b.ToTable("r005", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.RRefbooks.R006", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_r006");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_r006_id");

                    b.ToTable("r006", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.RRefbooks.R007", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_r007");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_r007_id");

                    b.ToTable("r007", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.RRefbooks.R008", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Code")
                        .HasColumnType("numeric")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_r008");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_r008_id");

                    b.ToTable("r008", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.RRefbooks.R009", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_r009");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_r009_id");

                    b.ToTable("r009", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.RRefbooks.R010", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_r010");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_r010_id");

                    b.ToTable("r010", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.RRefbooks.R011", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_r011");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_r011_id");

                    b.ToTable("r011", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.RRefbooks.R012", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_r012");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_r012_id");

                    b.ToTable("r012", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.RRefbooks.R013", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_r013");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_r013_id");

                    b.ToTable("r013", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.RRefbooks.R014", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_r014");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_r014_id");

                    b.ToTable("r014", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V002", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v002");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v002_id");

                    b.ToTable("v002", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V003", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AdmissibilitySign")
                        .HasColumnType("integer")
                        .HasColumnName("admissibility_sign");

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int?>("ElementCode")
                        .HasColumnType("integer")
                        .HasColumnName("element_code");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v003");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v003_id");

                    b.ToTable("v003", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V005", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v005");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v005_id");

                    b.ToTable("v005", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V006", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v006");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v006_id");

                    b.ToTable("v006", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V008", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v008");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v008_id");

                    b.ToTable("v008", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V009", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("V006Code")
                        .HasColumnType("integer")
                        .HasColumnName("v006code");

                    b.HasKey("Id")
                        .HasName("pk_v009");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v009_id");

                    b.ToTable("v009", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V010", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v010");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v010_id");

                    b.ToTable("v010", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V012", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("V006Code")
                        .HasColumnType("integer")
                        .HasColumnName("v006code");

                    b.HasKey("Id")
                        .HasName("pk_v012");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v012_id");

                    b.ToTable("v012", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V013", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v013");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v013_id");

                    b.ToTable("v013", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V014", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v014");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v014_id");

                    b.ToTable("v014", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V015", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int?>("Hierarchy")
                        .HasColumnType("integer")
                        .HasColumnName("hierarchy");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("Okso")
                        .HasColumnType("integer")
                        .HasColumnName("okso");

                    b.Property<int?>("SpecialityCode")
                        .HasColumnType("integer")
                        .HasColumnName("speciality_code");

                    b.HasKey("Id")
                        .HasName("pk_v015");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v015_id");

                    b.ToTable("v015", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V016", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("ValuesSet")
                        .HasColumnType("text")
                        .HasColumnName("values_set");

                    b.HasKey("Id")
                        .HasName("pk_v016");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v016_id");

                    b.ToTable("v016", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V017", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v017");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v017_id");

                    b.ToTable("v017", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V018", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v018");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v018_id");

                    b.ToTable("v018", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V019", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int?>("GroupNumber")
                        .HasColumnType("integer")
                        .HasColumnName("group_number");

                    b.Property<string>("MkbDiagnosis")
                        .HasColumnType("text")
                        .HasColumnName("mkb_diagnosis");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("PatientModel")
                        .HasColumnType("text")
                        .HasColumnName("patient_model");

                    b.Property<int?>("PatientModelId")
                        .HasColumnType("integer")
                        .HasColumnName("patient_model_id");

                    b.Property<string>("TypeCode")
                        .HasColumnType("text")
                        .HasColumnName("type_code");

                    b.HasKey("Id")
                        .HasName("pk_v019");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v019_id");

                    b.ToTable("v019", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V020", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v020");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v020_id");

                    b.ToTable("v020", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V021", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int?>("PositionCode")
                        .HasColumnType("integer")
                        .HasColumnName("position_code");

                    b.Property<string>("PositionName")
                        .HasColumnType("text")
                        .HasColumnName("position_name");

                    b.Property<string>("SpecialityName")
                        .HasColumnType("text")
                        .HasColumnName("speciality_name");

                    b.HasKey("Id")
                        .HasName("pk_v021");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v021_id");

                    b.ToTable("v021", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V022", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v022");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v022_id");

                    b.ToTable("v022", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V023", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<string>("Coefficient")
                        .HasColumnType("text")
                        .HasColumnName("coefficient");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Number")
                        .HasColumnType("text")
                        .HasColumnName("number");

                    b.HasKey("Id")
                        .HasName("pk_v023");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v023_id");

                    b.ToTable("v023", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V024", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v024");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v024_id");

                    b.ToTable("v024", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V025", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v025");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v025_id");

                    b.ToTable("v025", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V026", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<string>("Coefficient")
                        .HasColumnType("text")
                        .HasColumnName("coefficient");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Number")
                        .HasColumnType("text")
                        .HasColumnName("number");

                    b.HasKey("Id")
                        .HasName("pk_v026");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v026_id");

                    b.ToTable("v026", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V027", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v027");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v027_id");

                    b.ToTable("v027", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V028", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v028");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v028_id");

                    b.ToTable("v028", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V029", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v029");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v029_id");

                    b.ToTable("v029", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V030", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Scheme")
                        .HasColumnType("text")
                        .HasColumnName("scheme");

                    b.Property<int?>("SeverityCode")
                        .HasColumnType("integer")
                        .HasColumnName("severity_code");

                    b.HasKey("Id")
                        .HasName("pk_v030");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v030_id");

                    b.ToTable("v030", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V031", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Group")
                        .HasColumnType("text")
                        .HasColumnName("group");

                    b.Property<int?>("MnnSign")
                        .HasColumnType("integer")
                        .HasColumnName("mnn_sign");

                    b.HasKey("Id")
                        .HasName("pk_v031");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v031_id");

                    b.ToTable("v031", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V032", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Scheme")
                        .HasColumnType("text")
                        .HasColumnName("scheme");

                    b.HasKey("Id")
                        .HasName("pk_v032");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v032_id");

                    b.ToTable("v032", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V033", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("MedecationCode")
                        .HasColumnType("text")
                        .HasColumnName("medecation_code");

                    b.HasKey("Id")
                        .HasName("pk_v033");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v033_id");

                    b.ToTable("v033", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V036", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int?>("MandatoryParametr")
                        .HasColumnType("integer")
                        .HasColumnName("mandatory_parametr");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v036");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v036_id");

                    b.ToTable("v036", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Nsi.VRefbooks.V037", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Code")
                        .HasColumnType("integer")
                        .HasColumnName("code");

                    b.Property<string>("Comment")
                        .HasColumnType("text")
                        .HasColumnName("comment");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int?>("MandatoryParametr")
                        .HasColumnType("integer")
                        .HasColumnName("mandatory_parametr");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_v037");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_v037_id");

                    b.ToTable("v037", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.CalculationMoCoefficient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<decimal?>("HospitalLevelCoefficient")
                        .HasColumnType("numeric")
                        .HasColumnName("hospital_level_coefficient");

                    b.Property<string>("MoCode")
                        .HasColumnType("text")
                        .HasColumnName("mo_code");

                    b.Property<decimal?>("OutpatientCareCoefficient")
                        .HasColumnType("numeric")
                        .HasColumnName("outpatient_care_coefficient");

                    b.Property<decimal?>("SpecificityEmcCoefficient")
                        .HasColumnType("numeric")
                        .HasColumnName("specificity_emc_coefficient");

                    b.HasKey("Id")
                        .HasName("pk_calculation_mo_coefficients");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_calculation_mo_coefficients_id");

                    b.ToTable("calculation_mo_coefficients", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.FirstStageAdultMedicalExaminationByServiceCountCalculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AcceptableServiceCount")
                        .HasColumnType("numeric")
                        .HasColumnName("acceptable_service_count");

                    b.Property<string>("Age")
                        .HasColumnType("text")
                        .HasColumnName("age");

                    b.Property<decimal?>("Gender")
                        .HasColumnType("numeric")
                        .HasColumnName("gender");

                    b.Property<decimal?>("GroupId")
                        .HasColumnType("numeric")
                        .HasColumnName("group_id");

                    b.Property<decimal?>("RegionalFeature")
                        .HasColumnType("numeric")
                        .HasColumnName("regional_feature");

                    b.Property<decimal?>("ServiceCountByStandard")
                        .HasColumnType("numeric")
                        .HasColumnName("service_count_by_standard");

                    b.HasKey("Id")
                        .HasName("pk_first_stage_adult_medical_examination_by_service_count_calc");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_first_stage_adult_medical_examination_by_service_count_calc");

                    b.ToTable("first_stage_adult_medical_examination_by_service_count_calculation", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.FirstStageAdultMedicalExaminationCalculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Age")
                        .HasColumnType("text")
                        .HasColumnName("age");

                    b.Property<string>("AgeGroup")
                        .HasColumnType("text")
                        .HasColumnName("age_group");

                    b.Property<string>("Gender")
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<string>("RegionalFeature")
                        .HasColumnType("text")
                        .HasColumnName("regional_feature");

                    b.Property<string>("ServiceCode")
                        .HasColumnType("text")
                        .HasColumnName("service_code");

                    b.HasKey("Id")
                        .HasName("pk_first_stage_adult_medical_examination_calculation");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_first_stage_adult_medical_examination_calculation_id");

                    b.ToTable("first_stage_adult_medical_examination_calculation", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.FirstStageAdultProfessionalExaminationCalculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Age")
                        .HasColumnType("text")
                        .HasColumnName("age");

                    b.Property<string>("AgeGroup")
                        .HasColumnType("text")
                        .HasColumnName("age_group");

                    b.Property<int>("ChildSign")
                        .HasColumnType("integer")
                        .HasColumnName("child_sign");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Gender")
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<int?>("ObligationServiceSign")
                        .HasColumnType("integer")
                        .HasColumnName("obligation_service_sign");

                    b.Property<int?>("Profile")
                        .HasColumnType("integer")
                        .HasColumnName("profile");

                    b.Property<string>("RegionalFeature")
                        .HasColumnType("text")
                        .HasColumnName("regional_feature");

                    b.Property<string>("ServiceCode")
                        .HasColumnType("text")
                        .HasColumnName("service_code");

                    b.Property<string>("ServiceName")
                        .HasColumnType("text")
                        .HasColumnName("service_name");

                    b.Property<int?>("Specialization")
                        .HasColumnType("integer")
                        .HasColumnName("specialization");

                    b.HasKey("Id")
                        .HasName("pk_first_stage_adult_professional_examination_calculation");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_first_stage_adult_professional_examination_calculation_id");

                    b.ToTable("first_stage_adult_professional_examination_calculation", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.HematologyTariff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssistanceTerms")
                        .HasColumnType("integer")
                        .HasColumnName("assistance_terms");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("ServiceCode")
                        .HasColumnType("text")
                        .HasColumnName("service_code");

                    b.Property<decimal?>("Tariff")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff");

                    b.HasKey("Id")
                        .HasName("pk_hematology_tariffs");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_hematology_tariffs_id");

                    b.ToTable("hematology_tariffs", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.HighTechMedicalCareTariff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int?>("GroupId")
                        .HasColumnType("integer")
                        .HasColumnName("group_id");

                    b.Property<decimal?>("Tariff")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff");

                    b.HasKey("Id")
                        .HasName("pk_high_tech_medical_care_tariffs");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_high_tech_medical_care_tariffs_id");

                    b.ToTable("high_tech_medical_care_tariffs", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.KsgBaseRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssistanceTerms")
                        .HasColumnType("integer")
                        .HasColumnName("assistance_terms");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("numeric")
                        .HasColumnName("rate");

                    b.HasKey("Id")
                        .HasName("pk_ksg_base_rates");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_ksg_base_rates_id");

                    b.ToTable("ksg_base_rates", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.KsgCalculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssistanceTerms")
                        .HasColumnType("integer")
                        .HasColumnName("assistance_terms");

                    b.Property<decimal?>("CostIintensityCoefficient")
                        .HasColumnType("numeric")
                        .HasColumnName("cost_iintensity_coefficient");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("DiagnosisSing")
                        .HasColumnType("text")
                        .HasColumnName("diagnosis_sing");

                    b.Property<string>("KsgName")
                        .HasColumnType("text")
                        .HasColumnName("ksg_name");

                    b.Property<string>("KsgNumber")
                        .HasColumnType("text")
                        .HasColumnName("ksg_number");

                    b.Property<string>("KsgType")
                        .HasColumnType("text")
                        .HasColumnName("ksg_type");

                    b.Property<string>("ManagementCoefficientSign")
                        .HasColumnType("text")
                        .HasColumnName("management_coefficient_sign");

                    b.Property<string>("OptimalDurationTreatmentSign")
                        .HasColumnType("text")
                        .HasColumnName("optimal_duration_treatment_sign");

                    b.Property<decimal?>("SalaryShare")
                        .HasColumnType("numeric")
                        .HasColumnName("salary_share");

                    b.HasKey("Id")
                        .HasName("pk_ksg_calculation");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_ksg_calculation_id");

                    b.ToTable("ksg_calculation", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.KsgGrouper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalCriteria")
                        .HasColumnType("text")
                        .HasColumnName("additional_criteria");

                    b.Property<string>("AgeGroup")
                        .HasColumnType("text")
                        .HasColumnName("age_group");

                    b.Property<string>("ComplicationDiagnosis")
                        .HasColumnType("text")
                        .HasColumnName("complication_diagnosis");

                    b.Property<string>("ConcomitantDiagnosis")
                        .HasColumnType("text")
                        .HasColumnName("concomitant_diagnosis");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("FractionsRange")
                        .HasColumnType("text")
                        .HasColumnName("fractions_range");

                    b.Property<string>("Gender")
                        .HasColumnType("text")
                        .HasColumnName("gender");

                    b.Property<string>("KsgNumber")
                        .HasColumnType("text")
                        .HasColumnName("ksg_number");

                    b.Property<string>("MainDiagnosis")
                        .HasColumnType("text")
                        .HasColumnName("main_diagnosis");

                    b.Property<string>("Number")
                        .HasColumnType("text")
                        .HasColumnName("number");

                    b.Property<int?>("SType")
                        .HasColumnType("integer")
                        .HasColumnName("s_type");

                    b.Property<string>("ServiceCode")
                        .HasColumnType("text")
                        .HasColumnName("service_code");

                    b.Property<int?>("TreatmentDuration")
                        .HasColumnType("integer")
                        .HasColumnName("treatment_duration");

                    b.HasKey("Id")
                        .HasName("pk_ksg_grouper");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_ksg_grouper_id");

                    b.ToTable("ksg_grouper", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.ManagementKsgCoefficient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Coefficient")
                        .HasColumnType("numeric")
                        .HasColumnName("coefficient");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("KsgNumber")
                        .HasColumnType("text")
                        .HasColumnName("ksg_number");

                    b.HasKey("Id")
                        .HasName("pk_management_ksg_coefficients");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_management_ksg_coefficients_id");

                    b.ToTable("management_ksg_coefficients", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.MobileTeamsMedicalExaminationCoefficient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Coefficient")
                        .HasColumnType("numeric")
                        .HasColumnName("coefficient");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("RegionalFeature")
                        .HasColumnType("text")
                        .HasColumnName("regional_feature");

                    b.Property<int?>("TeamType")
                        .HasColumnType("integer")
                        .HasColumnName("team_type");

                    b.HasKey("Id")
                        .HasName("pk_mobile_teams_medical_examination_coefficients");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_mobile_teams_medical_examination_coefficients_id");

                    b.ToTable("mobile_teams_medical_examination_coefficients", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.OutpatientTariffCalculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssistanceTerms")
                        .HasColumnType("integer")
                        .HasColumnName("assistance_terms");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int?>("PaymentMethod")
                        .HasColumnType("integer")
                        .HasColumnName("payment_method");

                    b.Property<int?>("Profile")
                        .HasColumnType("integer")
                        .HasColumnName("profile");

                    b.Property<int?>("RegionalFeature")
                        .HasColumnType("integer")
                        .HasColumnName("regional_feature");

                    b.Property<decimal?>("Tariff1")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff1");

                    b.Property<decimal?>("Tariff10")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff10");

                    b.Property<decimal?>("Tariff11")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff11");

                    b.Property<decimal?>("Tariff12")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff12");

                    b.Property<decimal?>("Tariff13")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff13");

                    b.Property<decimal?>("Tariff14")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff14");

                    b.Property<decimal?>("Tariff2")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff2");

                    b.Property<decimal?>("Tariff3")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff3");

                    b.Property<decimal?>("Tariff4")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff4");

                    b.Property<decimal?>("Tariff5")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff5");

                    b.Property<decimal?>("Tariff6")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff6");

                    b.Property<decimal?>("Tariff7")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff7");

                    b.Property<decimal?>("Tariff8")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff8");

                    b.Property<decimal?>("Tariff9")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff9");

                    b.HasKey("Id")
                        .HasName("pk_outpatient_tariff_calculation");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_outpatient_tariff_calculation_id");

                    b.ToTable("outpatient_tariff_calculation", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.RegionalLaboratoryStudiesCalculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssistanceForm")
                        .HasColumnType("integer")
                        .HasColumnName("assistance_form");

                    b.Property<int?>("AssistanceIssue")
                        .HasColumnType("integer")
                        .HasColumnName("assistance_issue");

                    b.Property<int?>("AssistanceProfile")
                        .HasColumnType("integer")
                        .HasColumnName("assistance_profile");

                    b.Property<int?>("AssistanceResult")
                        .HasColumnType("integer")
                        .HasColumnName("assistance_result");

                    b.Property<int?>("AssistanceSpecialization")
                        .HasColumnType("integer")
                        .HasColumnName("assistance_specialization");

                    b.Property<int?>("AssistanceType")
                        .HasColumnType("integer")
                        .HasColumnName("assistance_type");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int?>("PaymentMethodCode")
                        .HasColumnType("integer")
                        .HasColumnName("payment_method_code");

                    b.Property<string>("ServiceCodeLis")
                        .HasColumnType("text")
                        .HasColumnName("service_code_lis");

                    b.Property<string>("ServiceCodeRegional")
                        .HasColumnType("text")
                        .HasColumnName("service_code_regional");

                    b.Property<string>("ServiceCodeV001")
                        .HasColumnType("text")
                        .HasColumnName("service_code_v001");

                    b.Property<string>("ServiceNameLis")
                        .HasColumnType("text")
                        .HasColumnName("service_name_lis");

                    b.Property<string>("ServiceNameRegional")
                        .HasColumnType("text")
                        .HasColumnName("service_name_regional");

                    b.Property<string>("ServiceNameV001")
                        .HasColumnType("text")
                        .HasColumnName("service_name_v001");

                    b.Property<string>("ServiceNumber")
                        .HasColumnType("text")
                        .HasColumnName("service_number");

                    b.Property<decimal?>("Tariff")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff");

                    b.Property<string>("VisitPurpose")
                        .HasColumnType("text")
                        .HasColumnName("visit_purpose");

                    b.HasKey("Id")
                        .HasName("pk_regional_laboratory_studies_calculation");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_regional_laboratory_studies_calculation_id");

                    b.ToTable("regional_laboratory_studies_calculation", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.RegionalServiceTariff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssistanceTerms")
                        .HasColumnType("integer")
                        .HasColumnName("assistance_terms");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("ServiceCode")
                        .HasColumnType("text")
                        .HasColumnName("service_code");

                    b.Property<decimal?>("Tariff")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff");

                    b.HasKey("Id")
                        .HasName("pk_regional_service_tariffs");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_regional_service_tariffs_id");

                    b.ToTable("regional_service_tariffs", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.ServiceTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<int?>("ChildSign")
                        .HasColumnType("integer")
                        .HasColumnName("child_sign");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<string>("CodeVme")
                        .HasColumnType("text")
                        .HasColumnName("code_vme");

                    b.Property<int?>("ComplexityMandatory")
                        .HasColumnType("integer")
                        .HasColumnName("complexity_mandatory");

                    b.Property<decimal?>("Count")
                        .HasColumnType("numeric")
                        .HasColumnName("count");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int?>("Mandatory")
                        .HasColumnType("integer")
                        .HasColumnName("mandatory");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("Profile")
                        .HasColumnType("integer")
                        .HasColumnName("profile");

                    b.Property<int?>("Specialization")
                        .HasColumnType("integer")
                        .HasColumnName("specialization");

                    b.Property<decimal?>("Tariff")
                        .HasColumnType("numeric")
                        .HasColumnName("tariff");

                    b.HasKey("Id")
                        .HasName("pk_service_templates");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_service_templates_id");

                    b.ToTable("service_templates", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.KsgCalculation.UetDentistryCalculation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("AdultUetCount")
                        .HasColumnType("numeric")
                        .HasColumnName("adult_uet_count");

                    b.Property<decimal?>("ChildUetCount")
                        .HasColumnType("numeric")
                        .HasColumnName("child_uet_count");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<int?>("Multiple")
                        .HasColumnType("integer")
                        .HasColumnName("multiple");

                    b.Property<string>("ServiceCode")
                        .HasColumnType("text")
                        .HasColumnName("service_code");

                    b.Property<string>("ServiceName")
                        .HasColumnType("text")
                        .HasColumnName("service_name");

                    b.HasKey("Id")
                        .HasName("pk_uet_dentistry_calculation");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_uet_dentistry_calculation_id");

                    b.ToTable("uet_dentistry_calculation", (string)null);
                });

            modelBuilder.Entity("Refbooks.Domain.Yamed.Mkb10", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Class")
                        .HasColumnType("integer")
                        .HasColumnName("class");

                    b.Property<string>("Code")
                        .HasColumnType("text")
                        .HasColumnName("code");

                    b.Property<DateTime?>("DateBegin")
                        .HasColumnType("date")
                        .HasColumnName("date_begin");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("date")
                        .HasColumnName("date_end");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<int?>("PayabilitySign")
                        .HasColumnType("integer")
                        .HasColumnName("payability_sign");

                    b.Property<int?>("Section")
                        .HasColumnType("integer")
                        .HasColumnName("section");

                    b.HasKey("Id")
                        .HasName("pk_mkb10");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasDatabaseName("ix_mkb10_id");

                    b.ToTable("mkb10", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
